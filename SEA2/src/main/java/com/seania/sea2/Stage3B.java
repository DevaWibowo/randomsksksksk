/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.seania.sea2;

import java.awt.Color;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author kuma
 */
public class Stage3B extends javax.swing.JFrame {
    Karakter Aku, Cameleon;
    char ascii = (char)127;
    String val = ascii+"";
    int c = 0;
    int cl = 0;
    
    DecimalFormat df = new DecimalFormat("####");
    
    private String getHealthAku(){
        String hp = df.format(Aku.getHealth());
        return hp;
    }
    
    private String getMaxHealthAku(){
        String hp = df.format(Aku.getMaxHealth());
        return hp;
    }
    
    private String getHealthCameleon(){
        String hp = df.format(Cameleon.getHealth());
        return hp;
    }
    
    private String getMaxHealthCameleon(){
        String hp = df.format(Cameleon.getMaxHealth());
        return hp;
    }
    
    private boolean cekVisibilityHeal(){
        boolean cek = btnHeal.isVisible();
        return cek;
    }
    
    private void enDis(){
        btnAttack.setEnabled(true);
        btnHeal.setEnabled(true);
        btnLifesteal.setEnabled(true);
    }
    
    private void triDis(){
        btnAttack.setEnabled(false);
        btnHeal.setEnabled(false);
        btnLifesteal.setEnabled(false);
    }
    
    private void tampilHeal(){
//        int hg = (int) Aku.getHealth();
        String k = "Cahaya hijau lembut menyelimuti tubuhmu";
        
//        if(hg <= 20){
            lblAn.setText(k);
            lblAn.setVisible(true);
            btnLanjut.setVisible(true);
            triDis();
            
            Aku.tambahHealth(50);
            btnHeal.setVisible(true);
//        }
    }
    
    private void tampilLifesteal(){
        
        String k = "Bisakah Aku menyerang sembari menyembuhkan tubuh ku?";
        
//        if(hmg <= 400){
            lblAn.setText(k);
            lblAn.setVisible(true);
            btnLanjut.setVisible(true);
            triDis();
            
            btnLifesteal.setVisible(true);
            
//        }
    }
    
    private void lblbtn(){
        lblAn.setVisible(false);
        btnLanjut.setVisible(false);
    }

    /**
     * Creates new form Stage3B
     */
    public Stage3B() {
        initComponents();
        setExtendedState(Stage3B.MAXIMIZED_BOTH);
        
        lblbtn();
        //Nama, HP, ATK, MaxHP, Turn
        Aku = new Karakter("[][][]", 100, 10, 100, true);
        Cameleon = new Karakter("Cameleon", 500, 15, 1000, false);
        Aku.setCounter(0);
        //
        String c = Aku.getCounter()+"";
        lblC.setText(c);
        //
        lblNamaPlayer.setText(Aku.getNama());
        lblNamaMusuh.setText(Cameleon.getNama());
        btnLifesteal.setVisible(false);
        btnHeal.setVisible(false);
        updateHealthBar();
        
    }
    
    private void updateHealthBar(){
        //WARNA PROGRESS BAR
        //HIJAU UNTUK PLAYER DAN MERAH UNTUK MUSUH
        barPlayer.setForeground(Color.GREEN);
        barMusuh.setForeground(Color.RED);
        
        //VARIABLE RETRIEVE HEALTH DAN MAX HEALTH
        //H = HEALTH, MH = MAXHEALTH, HM = HEALTH MUSUH, MHM = MAX HEALTH MUSUH
        int mh, h, hm, mhm;
        mh = (int) Aku.getMaxHealth();
        h = (int) Aku.getHealth();
        hm = (int) Cameleon.getHealth();
        mhm = (int) Cameleon.getMaxHealth();
        
        //SET VALUE DAN MAKSIMUM HEALTH BAR
        barPlayer.setMaximum(mh);
        barPlayer.setValue(h);
        barMusuh.setMaximum(mhm);
        barMusuh.setValue(hm);
        
        //SET TEXT KE LABEL
        lblHealth.setText(getHealthAku() + " / " + getMaxHealthAku());
        lblHealthMusuh.setText(getHealthCameleon() + " / " + getMaxHealthCameleon());
    }
    
    private boolean cekTurn(){
        boolean c = Aku.getTurn();
        return c;
    }
    
    private void balikTurn(){
        boolean ta = cekTurn();
        if(ta == true){
            Aku.setTurn(false);
        }else if(ta == false){
            Aku.setTurn(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        barPlayer = new javax.swing.JProgressBar();
        btnAttack = new javax.swing.JButton();
        btnHeal = new javax.swing.JButton();
        lblHealth = new javax.swing.JLabel();
        lblNamaPlayer = new javax.swing.JLabel();
        btnLifesteal = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblHealthMusuh = new javax.swing.JLabel();
        barMusuh = new javax.swing.JProgressBar();
        lblNamaMusuh = new javax.swing.JLabel();
        lblAn = new javax.swing.JLabel();
        btnLanjut = new javax.swing.JButton();
        lblC = new javax.swing.JLabel();
        lblHeal = new javax.swing.JLabel();
        lblLifesteal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Stage 3");

        barPlayer.setForeground(new java.awt.Color(0, 0, 0));

        btnAttack.setText("Serang");
        btnAttack.setFocusable(false);
        btnAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttackActionPerformed(evt);
            }
        });

        btnHeal.setText("Heal");
        btnHeal.setFocusable(false);
        btnHeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHealActionPerformed(evt);
            }
        });

        lblHealth.setText("jLabel1");

        lblNamaPlayer.setText("jLabel1");

        btnLifesteal.setText("Lifestyle");
        btnLifesteal.setFocusable(false);
        btnLifesteal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLifestealActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(barPlayer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNamaPlayer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 253, Short.MAX_VALUE)
                        .addComponent(btnLifesteal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHeal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAttack))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblHealth)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblHealth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAttack)
                        .addComponent(btnHeal)
                        .addComponent(btnLifesteal))
                    .addComponent(lblNamaPlayer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblHealthMusuh.setText("jLabel1");

        lblNamaMusuh.setText("jLabel2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(barMusuh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHealthMusuh, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNamaMusuh, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblNamaMusuh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barMusuh, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHealthMusuh)
                .addContainerGap())
        );

        lblAn.setText("jLabel1");

        btnLanjut.setText("Lanjut >>");
        btnLanjut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLanjutActionPerformed(evt);
            }
        });

        lblC.setText("jLabel1");

        lblHeal.setText("jLabel1");

        lblLifesteal.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLanjut)
                            .addComponent(lblAn))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblLifesteal)
                .addGap(75, 75, 75)
                .addComponent(lblHeal)
                .addGap(35, 35, 35)
                .addComponent(lblC)
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblAn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLanjut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblC)
                            .addComponent(lblHeal))
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblLifesteal)
                        .addGap(30, 30, 30)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void preventBar(){
        int h = (int) Cameleon.getHealth();
        int hp = (int) Aku.getHealth();
        
        if(hp <= 0){
            Aku.setHealth(0);
            barPlayer.setValue(hp);
            barPlayer.setString(getHealthAku() + " / " + getMaxHealthAku());
        }
        
        if(Cameleon.getHealth() <= 0){
            Cameleon.setHealth(0);
            barMusuh.setValue(h);
            barMusuh.setString(getHealthAku() + " / " + getMaxHealthAku());
        }
    }
    
    private void isDead(){
        int hp = (int) Aku.getHealth();
        if(hp <= 0){
            JOptionPane.showMessageDialog(null, "Permainan Berakhir");
            this.dispose();
        }
    }
    
    private void enableHeal(){
        btnHeal.setEnabled(true);
    }
    
    private void enableLifesteal(){
        btnLifesteal.setEnabled(true);
    }
    
    private void btnAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttackActionPerformed
        Aku.Serang(Cameleon);
        Cameleon.Serang(Aku);
        int hg = (int) Aku.getHealth();
        int hmg = (int) Cameleon.getHealth();
        int coun = Aku.getCounter();
        boolean b = false;
        
        if(hg <= 20 && coun == 0){
            tampilHeal();
            Aku.setCounter(1);
            String c = Aku.getCounter()+"";
            lblC.setText(c);
        }
        
        if(hmg <= 400 && coun == 1){
            tampilLifesteal();
            Aku.setCounter(2);
            String c = Aku.getCounter()+"";
            lblC.setText(c);
        }
        
        c++;
        if(c == 3){
            enableHeal();
            btnHeal.setEnabled(true);
        }
        
        cl++;
        if(cl == 3){
            enableLifesteal();
            btnLifesteal.setEnabled(true);
        }
        
        preventBar();
        updateHealthBar();
        balikTurn();
        isDead();
    }//GEN-LAST:event_btnAttackActionPerformed

    private void btnHealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHealActionPerformed
        Aku.Heal();
        Cameleon.Serang(Aku);
        

        int h = (int) Aku.getHealth();
        
        if(Aku.getHealth() >= Aku.getMaxHealth()){
            Aku.setHealth(Aku.getMaxHealth());
            barPlayer.setValue(h);
            barPlayer.setString(getHealthAku() + " / " + getMaxHealthAku());
        }
        
        updateHealthBar();
        balikTurn();
        btnHeal.setEnabled(false);
        c = 0;
        isDead();
    }//GEN-LAST:event_btnHealActionPerformed

    private void btnLifestealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLifestealActionPerformed
//        Aku.Lifesteal(Cameleon);
        Aku.Serang(Cameleon);
        Aku.Heal();
        Cameleon.Serang(Aku);
        
        updateHealthBar();
        btnLifesteal.setEnabled(false);
        cl = 0;
        isDead();
    }//GEN-LAST:event_btnLifestealActionPerformed

    private void btnLanjutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLanjutActionPerformed
        enDis();
        lblbtn();
    }//GEN-LAST:event_btnLanjutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stage3B.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stage3B.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stage3B.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stage3B.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stage3B().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barMusuh;
    private javax.swing.JProgressBar barPlayer;
    private javax.swing.JButton btnAttack;
    private javax.swing.JButton btnHeal;
    private javax.swing.JButton btnLanjut;
    private javax.swing.JButton btnLifesteal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblAn;
    private javax.swing.JLabel lblC;
    private javax.swing.JLabel lblHeal;
    private javax.swing.JLabel lblHealth;
    private javax.swing.JLabel lblHealthMusuh;
    private javax.swing.JLabel lblLifesteal;
    private javax.swing.JLabel lblNamaMusuh;
    private javax.swing.JLabel lblNamaPlayer;
    // End of variables declaration//GEN-END:variables
}
